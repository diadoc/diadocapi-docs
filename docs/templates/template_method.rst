[Название_метода]
=================
// — длина подчеркивания строго равна длине заголовка

// если метод устарел, оставь предупреждение здесь

Метод ``[Название_метода]`` [делает что-то или предназначен для чего-то].
// — кратко - назначение метода и — опционально — его КЛЮЧЕВЫЕ особенности, об которые пользователи часто спотыкаются

.. http:get:: /[Имя_ресурса]
// или http:post, или другой метод

	:queryparam [имя_параметра]: [описание параметра].
	// необязательные параметры помечай фразой «Необязательный параметр.»
	// ограничения по длине помечай фразой «Длина не должна превышать 5000 символов.»
	// нерегистрочувствительный параметр помечай фразой «Нерегистрочувствительный.»
	// значение по умолчанию указывай фразой «по умолчанию равен ``[значение]``»
	// комбинацию особенностей перечисляй через запятую
	// — часто встречающиеся параметры: использовать нужное, удалить лишнее
	:queryparam boxId: идентификатор :doc:`ящика <../../entities/box>` организации.
	:queryparam messageId: идентификатор сообщения.
	// Для парных методов — в методах [...]Result описание параметра taskId должно выглядеть так:
	:queryparam taskId: идентификатор операции, полученный методом [ссылка на метод].
	// ниже список других параметров

	:requestheader [Название_заголовка]: [описание заголовка].
	:requestheader Authorization: данные, необходимые для :doc:`авторизации <../Authorization>`.
	// — может отсутствовать в некоторых методах
	// ниже список других заголовков, если они есть

	:request Body: Тело запроса должно содержать [описание тела запроса].

	:statuscode [код]: [описание ответа].
	// часто встречающиеся коды: использовать нужное, удалить лишнее
	:statuscode 200: операция успешно завершена.
	:statuscode 204: операция еще не завершена. В HTTP-заголовке ответа ``Retry-After`` указано время в секундах, через которое нужно повторить запрос.
	:statuscode 400: данные в запросе имеют неверный формат или отсутствуют обязательные параметры.
	:statuscode 401: в запросе отсутствует HTTP-заголовок ``Authorization`` или в этом заголовке содержатся некорректные авторизационные данные.
	// — текст может меняться в зависимости от метода
	:statuscode 402: у организации с указанным идентификатором ``boxId`` закончилась подписка на API.
	// - в некоторых методах эта ошибка отсутствует, нужно уточнять у разработчиков. Проверить, что при наличии этого кода ошибки описан параметр запроса boxId. Вместо boxId может использоваться orgId, тогда текст ошибки нужно соответственно изменить
	:statuscode 403: доступ к ящику с предоставленным авторизационным токеном запрещен.
	// — текст может меняться в зависимости от метода
	:statuscode 404: не найден ящик с указанным идентификатором.
	// — это пример: текст желательно начинать со слов «не найден[ы]»
	:statuscode 405: используется неподходящий HTTP-метод.
	:statuscode 500: при обработке запроса возникла непредвиденная ошибка.
	// описать другие коды ответов, если они есть, в порядке увеличения номера ошибки

	:responseheader [Название_заголовка]: [описание заголовка].
	// часто встречающиеся заголовки: использовать нужное, удалить лишнее
	:responseheader Retry-After: если в ответе содержится HTTP-заголовок ``Retry-After``, то предыдущий вызов этого метода с таким же идентификатором операции еще не завершен. В этом случае следует повторить вызов через указанное в заголовке время (в секундах), чтобы убедиться, что операция завершилась без ошибок.
	// ниже список других заголовков, если они есть

	:response Body: Тело ответа содержит [описание тела ответа].
	// Если метод возвращает AsyncMethodResult, то текст такой:
	//Тело ответа содержит идентификатор операции ``taskId`` в структуре :doc:`../proto/AsyncMethodResult`. По этому идентификатору с помощью метода :doc:`[название_метода_result]` можно узнать результат обработки запроса.
	// Для методов [...]Result текст такой:
	:response Body: Тело ответа содержит результат выполнения операции, представленный структурой [имя_структуры].


[Здесь можно перечислить права, которые должен иметь пользователь для выполнения метода, например:]
//Для выполнения метода текущий пользователь должен иметь доступ к [перечисление требований к пользователю], иначе метод вернет ошибку ``403 (Forbidden)``.

[Особенности метода, подробное описание, сценарии - если нужно].

[Здесь можно описать правила работы метода, если они есть, например:]
//Метод работает по следующим правилам:
//	- Если [], то [].
// перечисление через табуляцию

// Если есть примеры для метода, оформлять так
Примеры использования
---------------------

// лучшее решение — оформлять примеры в include-файлах

**Пример HTTP-запроса:**

[пример]

**Пример тела запроса:**

[пример]

**Пример тела ответа:**

[пример]

**Пример запроса с использованием C# SDK**:


----

.. rubric:: См. также
// впсать только то, что есть из нижеперечисленного
// элементы списков писать в алфавитном порядке, отталкиваясь от отображаемого пользователю названия,
// с табуляцией, без пропуска пустой строки, без знака препинания в конце

*Определение:*
	- [ссылка на статью]

*Инструкции:*
	- [ссылка на статью]

*Структуры и методы для работы с [тематика]:* // используется только если структуры и методы описаны на одной странице
	- [ссылка]

*Методы для работы с [тематика]:*
	- [ссылка на метод] — [что делает метод]
	// Если тематик несколько, нужно включить сюда несколько блоков

// Для методов одной тематики — использовать переиспользуемый текст
.. include:: ../include/***.txt

// Если у метода есть устаревшие версии в папке obsolete
*Устаревшие версии метода:*
	- [ссылка на метод]